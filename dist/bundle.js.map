{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/app.js","src/filter.js","src/loadSongs.js","src/songMaker.js","src/switchViews.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\n\nlet SongLister = require(\"./songMaker\");\nconsole.log(\"SongLister\", SongLister);\n\n$(document).ready(function() {\n\n\t// toggle views with nav bar links for view list and add song\n\t// var addSongLink = $(\"#addSong\");\n\t\n\t// $(\"#viewSongs\").click(switchView(\"viewSongs\"));\n\t// $(\"#addSong\").click(switchView(\"addSongs\"));\n\n\n\t// add new song section\n\t// $(\"#addSongBtn\").click(addSongToList);  //add song button\n\n\t\n\n\n\t//initial list of songs displayed\n\tlet currentView = \"viewSongs\";\n\n\tSongLister.loadSongs.getSongList();\n\n\n\n});\n\n","// One module is responsible for making the filtering form work. Therefore, it will need to use methods from the previous module.\n\n// Filtering\n\n// When the user selects an artist, only songs from that artist should appear.\n// When the user selects an album, only songs from that album should appear.\n\n\"use strict\";\n\nlet loadingSongs = require(\"./loadSongs\");\n\nlet filter = function(artist, album){\n\n\n\n};\n\nmodule.exports = filter;","// One module is responsible for loading songs from a JSON file and storing them in an array. This module should expose one method for getting the entire list of songs, and one method for adding a song to the array.\n\n\"use strict\";\n\nvar listViewEl = $(\"#main\");\nvar addViewEl = $(\"#addSongSection\");\nvar sideBarEl = $(\"#sidebar\");\n\n// loading songs\nvar songList; //hold array of all songs\nvar song2List; //to hold the 2nd json of songs\nvar songsAdded = false; //determine if 2nd set of songs have been loaded\n\nfunction displaySongList (list) {\n\tvar listLength = list.songs.length;\n\tlistViewEl.empty();\n\tfor (var i = 0; i < listLength; i++) {\n\t\tlistViewEl.append(`<section id=\"section--${i}\" class=\"song\"><h2 class=\"songName\">${list.songs[i].title}</h2><p class=\"artistName\">${list.songs[i].artist}</p><p class=\"albumName\">${list.songs[i].album}</p><button id=\"delBtn--${i}\" class=\"buttons\">Delete Song</button></section>`);\n\t}\n\n\tif (songsAdded === false) { //if 2nd set of songs has not been added yet, add button for more songs\n\t\tlistViewEl.append(`<div id=\"more\"><button id=\"moreButton\">More songs</button></div>`);\n\t\t$(\"#moreButton\").on(\"click\", getMoreSongs);\n\t}\n\n\t$(\".buttons\").on(\"click\", deleteSong); //adds listeners to all delete buttons\n}\n\nfunction deleteSong(clickedButton) {\n\tvar clickedBtnID = event.target.id.split(\"--\")[1]; //get ID # of clicked delete button\n\tsongList.songs.splice(clickedBtnID, 1);\n\tdisplaySongList(songList);\n}\n\n\nlet getSongList = function(){\n\t$.ajax({\n      url: \"songs.json\"\n    }).done(function(data) {\n    \tsongList = data;\n    \tconsole.log(\"songList\", songList);\n\t\t\tdisplaySongList(songList);\n    });\n};\n\nlet getMoreSongs = function(){\n\t$.ajax({\n\t      url: \"songs2.json\"\n\t    }).done(function(data) {\n\t    \tsong2List = data;\n\t\t\tfor (var i = 0; i < song2List.songs.length; i++) { //add new songs from 2nd JSON to current song list array\n\t\t\t\tvar newSongObject = song2List.songs[i];\n\t\t\t\tsongList.songs.push(newSongObject);\n\t\t\t}\n\t\t\tsongsAdded = true;\n\t\t\tdisplaySongList(songList);\n\t    }).fail(function(xhr, status, error) {\n\t      reject(error);\n\t    });\n};\n\n\n\nlet addSong = function(){\n\n};\n\n\nmodule.exports = {getSongList, getMoreSongs, addSong};\n\n","\"use strict\";\n\nlet filter = require(\"./filter\");\nlet switchViews = require(\"./switchViews\");\nlet loadSongs = require(\"./loadSongs\");\n\nlet SongMaker = {filter, switchViews, loadSongs};\n\n\nmodule.exports = SongMaker;\n\n","//One module is responsible for showing the two views of the app (song list and song form).\n\n\"use strict\";\n\nvar listViewEl = $(\"#main\");\nvar addViewEl = $(\"#addSongSection\");\nvar sideBarEl = $(\"#sidebar\");\n\nlet switchView = function(currentView) {\n\n\tif (currentView === \"viewSongs\") {\n\t\tlistViewEl.addClass(\"visible\").removeClass(\"hidden\");\n\t\taddViewEl.addClass(\"hidden\").removeClass(\"visible\");\n\t\tsideBarEl.addClass(\"visible\").removeClass(\"hidden\");\t\n\t} else {\n\t\tlistViewEl.addClass(\"hidden\").removeClass(\"visible\");\n\t\taddViewEl.addClass(\"visible\").removeClass(\"hidden\");\n\t\tsideBarEl.addClass(\"hidden\").removeClass(\"visible\");\t\n\t}\n\n};\n\n\nmodule.exports = switchView;"]}